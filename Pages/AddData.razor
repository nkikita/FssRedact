@page "/AddData/{userId, ch}"

@using FssRedact.Services;
@using FssRedact.Models;
@using System.Globalization;
@inject UserService UserService
@inject DialogService DialogService

<RadzenCard Style="max-width: 600px; padding: 20px;">
    <RadzenStack Orientation="Orientation.Vertical" Gap="1rem">
        <RadzenDropDown TValue="string"
                Data="@options"
                TextProperty="Text"
                ValueProperty="Value"
                @bind-Value="selectedValue"
                Placeholder="Выберите вариант" /><RadzenLabel>дата начала периода</RadzenLabel>
        <RadzenMask  Mask="**-**-****" CharacterPattern="[0-9]" Placeholder="Введите дату в формате dd-MM-yyyy" Name="Phone" @bind-Value=@begin_date Style="width: 100%;" aria-label="Phone" />
        <RadzenLabel>дата конца периода</RadzenLabel>
        <RadzenMask Mask="**-**-****" CharacterPattern="[0-9]" Placeholder="Введите дату в формате dd-MM-yyyy" Name="Phone" @bind-Value=@end_date Style="width: 100%;" aria-label="Phone" />
        <RadzenButton Click="AddDatas">Записать</RadzenButton>
    </RadzenStack>
</RadzenCard>

@code{
  private List<Option> options = new()
    {
        new Option { Value = "1", Text = "Работа" },
        new Option { Value = "2", Text = "Больничный" },
        new Option { Value = "3", Text = "Учеба" }
    };
    string? selectedValue;
    [Parameter] public int userId { get; set; }
    [Parameter] public int ch {get; set;}

    string? begin_date;
    string? end_date;

    private void AddDatas(){

        try{
            if(begin_date == null && end_date == null){
                DialogService.Close(); 
            }
            else{
            if(ch == 1 ){
                UserService.AddExcludePreiod(
                    userId, 
                    DateTime.ParseExact(begin_date, "dd-MM-yyyy", CultureInfo.InvariantCulture).Date, 
                    DateTime.ParseExact(end_date, "dd-MM-yyyy", CultureInfo.InvariantCulture).Date,
                    Convert.ToInt32(selectedValue)
                );
            }
            else if (ch ==2){
                UserService.AddDownPreiod(
                    userId, 
                    DateTime.ParseExact(begin_date, "dd-MM-yyyy", CultureInfo.InvariantCulture).Date, 
                    DateTime.ParseExact(end_date, "dd-MM-yyyy", CultureInfo.InvariantCulture).Date,
                    Convert.ToInt32(selectedValue)
                );
            }
            
            DialogService.Close(); 
            StateHasChanged();
            }
        }catch(Exception ex){
            DialogService.OpenAsync<ShowError>("Ошибка", new Dictionary<string, object>
            {
                { "ex", ex }
            }
        );
        StateHasChanged();}
    }
}
