@page "/DeleteData/{userId, ch}"

@using FssRedact.Services;
@using FssRedact.Models;
@using System.Globalization;
@inject UserService UserService
@inject DialogService DialogService


<RadzenCard Style="max-width: 600px; padding: 20px;">
    <RadzenStack Orientation="Orientation.Vertical" Gap="1rem">
        <RadzenLabel>дата начала периода</RadzenLabel>
        <RadzenMask Mask="****-**-**" CharacterPattern="[0-9]" Placeholder="Введите дату в формате yyyy-MM-dd" Name="Phone" @bind-Value=@begin_date Style="width: 100%;" aria-label="Phone" />
        <RadzenLabel>дата конца периода</RadzenLabel>
       <RadzenMask Mask="****-**-**" CharacterPattern="[0-9]" Placeholder="Введите дату в формате yyyy-MM-dd" Name="Phone" @bind-Value=@end_date Style="width: 100%;" aria-label="Phone" />
        <RadzenButton Click="Delete">Удалить</RadzenButton>
    </RadzenStack>
</RadzenCard>

@code {
    string? begin_date;
    string? end_date;
    
    [Parameter] public int userId { get; set; }
    [Parameter] public int ch {get; set;}

    private void Delete(){
        
        try{
            if(begin_date == null && end_date == null){
            
                DialogService.Close(); 
            }
            else{
            if(ch == 1 ){
                UserService.DeleteExcludePreiod(
                    userId, 
                    DateTime.ParseExact(begin_date, "yyyy-MM-dd", CultureInfo.InvariantCulture).Date, 
                    DateTime.ParseExact(end_date, "yyyy-MM-dd", CultureInfo.InvariantCulture).Date
                );
            }
            else if (ch ==2){
                UserService.DeleteDownPreiod(
                    userId, 
                    DateTime.ParseExact(begin_date, "yyyy-MM-dd", CultureInfo.InvariantCulture).Date, 
                    DateTime.ParseExact(end_date, "yyyy-MM-dd", CultureInfo.InvariantCulture).Date
                );
            }
            
            DialogService.Close(); 
            StateHasChanged();
            }
            
        }catch(Exception ex){
            DialogService.OpenAsync<ShowError>("Ошибка", new Dictionary<string, object>
            {
                { "ex", ex }
            }
        );
        StateHasChanged();}
    }
} 
